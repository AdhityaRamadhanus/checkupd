// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	GenericEndpointRequest
	HttpEndpointRequest
	TcpEndpointRequest
	InquiryEndpointRequest
	EndpointResponse
	InquiryResponse
	ListEndpointRequest
	ListEndpointResponse
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenericEndpointRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Attempts int32  `protobuf:"varint,3,opt,name=attempts" json:"attempts,omitempty"`
}

func (m *GenericEndpointRequest) Reset()                    { *m = GenericEndpointRequest{} }
func (m *GenericEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*GenericEndpointRequest) ProtoMessage()               {}
func (*GenericEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GenericEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GenericEndpointRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GenericEndpointRequest) GetAttempts() int32 {
	if m != nil {
		return m.Attempts
	}
	return 0
}

type HttpEndpointRequest struct {
	Endpoint *GenericEndpointRequest `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *HttpEndpointRequest) Reset()                    { *m = HttpEndpointRequest{} }
func (m *HttpEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*HttpEndpointRequest) ProtoMessage()               {}
func (*HttpEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HttpEndpointRequest) GetEndpoint() *GenericEndpointRequest {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type TcpEndpointRequest struct {
	Endpoint      *GenericEndpointRequest `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Tls           bool                    `protobuf:"varint,2,opt,name=tls" json:"tls,omitempty"`
	TlsSkipVerify string                  `protobuf:"bytes,3,opt,name=tls_skip_verify,json=tlsSkipVerify" json:"tls_skip_verify,omitempty"`
	TlsCaFile     string                  `protobuf:"bytes,4,opt,name=tls_ca_file,json=tlsCaFile" json:"tls_ca_file,omitempty"`
}

func (m *TcpEndpointRequest) Reset()                    { *m = TcpEndpointRequest{} }
func (m *TcpEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*TcpEndpointRequest) ProtoMessage()               {}
func (*TcpEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TcpEndpointRequest) GetEndpoint() *GenericEndpointRequest {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *TcpEndpointRequest) GetTls() bool {
	if m != nil {
		return m.Tls
	}
	return false
}

func (m *TcpEndpointRequest) GetTlsSkipVerify() string {
	if m != nil {
		return m.TlsSkipVerify
	}
	return ""
}

func (m *TcpEndpointRequest) GetTlsCaFile() string {
	if m != nil {
		return m.TlsCaFile
	}
	return ""
}

type InquiryEndpointRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *InquiryEndpointRequest) Reset()                    { *m = InquiryEndpointRequest{} }
func (m *InquiryEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*InquiryEndpointRequest) ProtoMessage()               {}
func (*InquiryEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *InquiryEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EndpointResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *EndpointResponse) Reset()                    { *m = EndpointResponse{} }
func (m *EndpointResponse) String() string            { return proto.CompactTextString(m) }
func (*EndpointResponse) ProtoMessage()               {}
func (*EndpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EndpointResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type InquiryResponse struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *InquiryResponse) Reset()                    { *m = InquiryResponse{} }
func (m *InquiryResponse) String() string            { return proto.CompactTextString(m) }
func (*InquiryResponse) ProtoMessage()               {}
func (*InquiryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *InquiryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InquiryResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *InquiryResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ListEndpointRequest struct {
	Check bool `protobuf:"varint,1,opt,name=check" json:"check,omitempty"`
}

func (m *ListEndpointRequest) Reset()                    { *m = ListEndpointRequest{} }
func (m *ListEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEndpointRequest) ProtoMessage()               {}
func (*ListEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListEndpointRequest) GetCheck() bool {
	if m != nil {
		return m.Check
	}
	return false
}

type ListEndpointResponse struct {
	Endpoints []*ListEndpointResponse_Endpoint `protobuf:"bytes,1,rep,name=endpoints" json:"endpoints,omitempty"`
}

func (m *ListEndpointResponse) Reset()                    { *m = ListEndpointResponse{} }
func (m *ListEndpointResponse) String() string            { return proto.CompactTextString(m) }
func (*ListEndpointResponse) ProtoMessage()               {}
func (*ListEndpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListEndpointResponse) GetEndpoints() []*ListEndpointResponse_Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type ListEndpointResponse_Endpoint struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *ListEndpointResponse_Endpoint) Reset()         { *m = ListEndpointResponse_Endpoint{} }
func (m *ListEndpointResponse_Endpoint) String() string { return proto.CompactTextString(m) }
func (*ListEndpointResponse_Endpoint) ProtoMessage()    {}
func (*ListEndpointResponse_Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

func (m *ListEndpointResponse_Endpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEndpointResponse_Endpoint) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ListEndpointResponse_Endpoint) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*GenericEndpointRequest)(nil), "service.GenericEndpointRequest")
	proto.RegisterType((*HttpEndpointRequest)(nil), "service.HttpEndpointRequest")
	proto.RegisterType((*TcpEndpointRequest)(nil), "service.TcpEndpointRequest")
	proto.RegisterType((*InquiryEndpointRequest)(nil), "service.InquiryEndpointRequest")
	proto.RegisterType((*EndpointResponse)(nil), "service.EndpointResponse")
	proto.RegisterType((*InquiryResponse)(nil), "service.InquiryResponse")
	proto.RegisterType((*ListEndpointRequest)(nil), "service.ListEndpointRequest")
	proto.RegisterType((*ListEndpointResponse)(nil), "service.ListEndpointResponse")
	proto.RegisterType((*ListEndpointResponse_Endpoint)(nil), "service.ListEndpointResponse.Endpoint")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Checkup service

type CheckupClient interface {
	// Endpoint Manipulation Function
	AddHTTPEndpoint(ctx context.Context, in *HttpEndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	AddTCPEndpoint(ctx context.Context, in *TcpEndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	DeleteEndpoint(ctx context.Context, in *InquiryEndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	// Endpoint Inspection Function
	ListEndpoint(ctx context.Context, in *ListEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error)
}

type checkupClient struct {
	cc *grpc.ClientConn
}

func NewCheckupClient(cc *grpc.ClientConn) CheckupClient {
	return &checkupClient{cc}
}

func (c *checkupClient) AddHTTPEndpoint(ctx context.Context, in *HttpEndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := grpc.Invoke(ctx, "/service.checkup/AddHTTPEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkupClient) AddTCPEndpoint(ctx context.Context, in *TcpEndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := grpc.Invoke(ctx, "/service.checkup/AddTCPEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkupClient) DeleteEndpoint(ctx context.Context, in *InquiryEndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := grpc.Invoke(ctx, "/service.checkup/DeleteEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkupClient) ListEndpoint(ctx context.Context, in *ListEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error) {
	out := new(ListEndpointResponse)
	err := grpc.Invoke(ctx, "/service.checkup/ListEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Checkup service

type CheckupServer interface {
	// Endpoint Manipulation Function
	AddHTTPEndpoint(context.Context, *HttpEndpointRequest) (*EndpointResponse, error)
	AddTCPEndpoint(context.Context, *TcpEndpointRequest) (*EndpointResponse, error)
	DeleteEndpoint(context.Context, *InquiryEndpointRequest) (*EndpointResponse, error)
	// Endpoint Inspection Function
	ListEndpoint(context.Context, *ListEndpointRequest) (*ListEndpointResponse, error)
}

func RegisterCheckupServer(s *grpc.Server, srv CheckupServer) {
	s.RegisterService(&_Checkup_serviceDesc, srv)
}

func _Checkup_AddHTTPEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HttpEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckupServer).AddHTTPEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.checkup/AddHTTPEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckupServer).AddHTTPEndpoint(ctx, req.(*HttpEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checkup_AddTCPEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TcpEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckupServer).AddTCPEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.checkup/AddTCPEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckupServer).AddTCPEndpoint(ctx, req.(*TcpEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checkup_DeleteEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InquiryEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckupServer).DeleteEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.checkup/DeleteEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckupServer).DeleteEndpoint(ctx, req.(*InquiryEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checkup_ListEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckupServer).ListEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.checkup/ListEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckupServer).ListEndpoint(ctx, req.(*ListEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Checkup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.checkup",
	HandlerType: (*CheckupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddHTTPEndpoint",
			Handler:    _Checkup_AddHTTPEndpoint_Handler,
		},
		{
			MethodName: "AddTCPEndpoint",
			Handler:    _Checkup_AddTCPEndpoint_Handler,
		},
		{
			MethodName: "DeleteEndpoint",
			Handler:    _Checkup_DeleteEndpoint_Handler,
		},
		{
			MethodName: "ListEndpoint",
			Handler:    _Checkup_ListEndpoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x9b, 0xb6, 0x71, 0x26, 0xb4, 0xa9, 0xb6, 0x55, 0x64, 0xc2, 0x57, 0xb4, 0x87, 0x2a,
	0x12, 0x55, 0x0e, 0xe1, 0xc8, 0xa9, 0x6a, 0x81, 0x80, 0xca, 0x87, 0x4c, 0xc4, 0x81, 0x4b, 0x64,
	0xec, 0x29, 0xac, 0xb2, 0x71, 0xb6, 0x9e, 0x71, 0xa5, 0xfe, 0x21, 0x2e, 0xfc, 0x0b, 0x7e, 0x19,
	0xca, 0x62, 0xaf, 0x4b, 0xb0, 0xa2, 0x48, 0x70, 0xdb, 0x79, 0x7e, 0xf3, 0xf4, 0xde, 0xcc, 0xc8,
	0xb0, 0x4f, 0x98, 0xdd, 0xa8, 0x18, 0x87, 0x26, 0x5b, 0xf0, 0x42, 0x34, 0x8b, 0x52, 0x7e, 0x86,
	0xee, 0x2b, 0x4c, 0x31, 0x53, 0xf1, 0x8b, 0x34, 0x31, 0x0b, 0x95, 0x72, 0x88, 0xd7, 0x39, 0x12,
	0x0b, 0x01, 0x3b, 0x69, 0x34, 0xc7, 0xc0, 0xeb, 0x7b, 0x83, 0x56, 0x68, 0xdf, 0xe2, 0x10, 0x1a,
	0x79, 0xa6, 0x83, 0x6d, 0x0b, 0x2d, 0x9f, 0xa2, 0x07, 0x7e, 0xc4, 0x8c, 0x73, 0xc3, 0x14, 0x34,
	0xfa, 0xde, 0x60, 0x37, 0x74, 0xb5, 0x0c, 0xe1, 0x68, 0xcc, 0x6c, 0x56, 0x85, 0x9f, 0x83, 0x8f,
	0x05, 0x64, 0xc5, 0xdb, 0xa3, 0x27, 0xc3, 0xd2, 0x5d, 0xbd, 0x97, 0xd0, 0x35, 0xc8, 0x1f, 0x1e,
	0x88, 0x49, 0xfc, 0x5f, 0x35, 0x97, 0xa9, 0x58, 0x93, 0x4d, 0xe5, 0x87, 0xcb, 0xa7, 0x38, 0x81,
	0x0e, 0x6b, 0x9a, 0xd2, 0x4c, 0x99, 0xe9, 0x0d, 0x66, 0xea, 0xea, 0xd6, 0x86, 0x6b, 0x85, 0xfb,
	0xac, 0xe9, 0xe3, 0x4c, 0x99, 0x4f, 0x16, 0x14, 0x8f, 0xa1, 0xbd, 0xe4, 0xc5, 0xd1, 0xf4, 0x4a,
	0x69, 0x0c, 0x76, 0x2c, 0xa7, 0xc5, 0x9a, 0xce, 0xa3, 0x97, 0x4a, 0xa3, 0x3c, 0x85, 0xee, 0xeb,
	0xf4, 0x3a, 0x57, 0xd9, 0xed, 0x06, 0xd3, 0x95, 0xa7, 0x70, 0x58, 0xd1, 0xc8, 0x2c, 0x52, 0x42,
	0x11, 0x40, 0x73, 0x8e, 0x44, 0xd1, 0xd7, 0x92, 0x5a, 0x96, 0xf2, 0x3d, 0x74, 0x0a, 0x6d, 0x47,
	0xde, 0x6c, 0x65, 0x5d, 0xd8, 0x23, 0x8e, 0x38, 0xa7, 0x22, 0x53, 0x51, 0xc9, 0xa7, 0x70, 0x74,
	0xa9, 0x88, 0x57, 0x9d, 0x1e, 0xc3, 0x6e, 0xfc, 0x0d, 0xe3, 0x99, 0x55, 0xf5, 0xc3, 0xdf, 0x85,
	0xfc, 0xee, 0xc1, 0xf1, 0x9f, 0xec, 0xc2, 0xc3, 0x05, 0xb4, 0xca, 0xc1, 0x52, 0xe0, 0xf5, 0x1b,
	0x83, 0xf6, 0xe8, 0xc4, 0xad, 0xa2, 0xae, 0x63, 0xe8, 0x80, 0xaa, 0xb1, 0x37, 0x06, 0xbf, 0x84,
	0xff, 0x2d, 0xd5, 0xe8, 0xe7, 0x36, 0x34, 0xad, 0xe5, 0xdc, 0x88, 0x4b, 0xe8, 0x9c, 0x25, 0xc9,
	0x78, 0x32, 0xf9, 0xe0, 0xc4, 0x1f, 0x3a, 0x6f, 0x35, 0xa7, 0xda, 0xbb, 0xef, 0xbe, 0xae, 0xba,
	0x96, 0x5b, 0xe2, 0x0d, 0x1c, 0x9c, 0x25, 0xc9, 0xe4, 0xbc, 0x12, 0x7b, 0xe0, 0xe8, 0x7f, 0x9f,
	0xe8, 0x7a, 0xad, 0x77, 0x70, 0x70, 0x81, 0x1a, 0x19, 0x9d, 0x56, 0x75, 0xbf, 0xf5, 0x17, 0xb4,
	0x5e, 0xef, 0x2d, 0xdc, 0xbb, 0x3b, 0xeb, 0x3b, 0x31, 0x6b, 0x56, 0xdc, 0x7b, 0xb4, 0x76, 0x41,
	0x72, 0xeb, 0xcb, 0x9e, 0xfd, 0x6b, 0x3c, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x0f, 0x64,
	0x86, 0x46, 0x04, 0x00, 0x00,
}
